{"version":3,"file":"static/js/395.13903d8f.chunk.js","mappings":"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","sources":["components/Container/Container.jsx","webpack://react-homework-template/./src/components/BackButton/BackButton.module.css?d3a5","components/BackButton/BackButton.jsx","webpack://react-homework-template/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","pages/MovieDetailsPage/MovieDetailsPage.js","services/api.js","services/settings.js","services/fetchMovies.js"],"sourcesContent":["export const Container = ({ children }) => {\n  return <div>{children}</div>;\n};","// extracted by mini-css-extract-plugin\nexport default {\"back\":\"BackButton_back__CNmI7\"};","import { Link, useLocation } from 'react-router-dom';\nimport styles from './BackButton.module.css';\n\nexport default function BackButton() {\n  const { state } = useLocation();\n  return (\n    state?.from && (\n      <Link to={state.from} className={styles.back}>\n        <button type=\"button\" >\n          <span >‚Üê Go back</span>\n        </button>\n      </Link>\n    )\n  );\n}","// extracted by mini-css-extract-plugin\nexport default {\"card__info--general\":\"MovieCard_card__info--general__2bdm5\",\"card__info--additional\":\"MovieCard_card__info--additional__FQm-T\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './MovieCard.module.css';\n\nexport default function MovieCard({ movie }) {\n  const { id, poster_path, title, release_date, vote_average, overview, genres } =\n    movie;\n\n  const voteScore = vote_average.toFixed(1) * 10;\n  \n  const location = useLocation();\n\n  return (\n    <>\n      <div className={styles['card__info--general']}>\n        <div className={styles['img__wrapper']}>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            alt={title}\n            width={250}\n          />\n        </div>\n        <div className={styles['details__wrapper']}>\n          <h2>\n            <span>{title}</span>\n            <span>({getRelizeYear(release_date)})</span>\n          </h2>\n          <p> User score: {getUserScore(voteScore)} %</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{getGenresNames(genres)}</p>\n        </div>\n      </div>\n      <div className={styles['card__info--additional']}>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to={`/movies/${id}/cast`} state={location.state}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to={`/movies/${id}/reviews`} state={location.state}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    poster_path: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      }).isRequired\n    ).isRequired,\n  }).isRequired,\n};\n\nfunction getRelizeYear(date) {\n  const today = new Date(date);\n  return today.getFullYear();\n}\n\nfunction getUserScore(data) {\n  return Math.round(data);\n}\n\nfunction getGenresNames(data) {\n  return data.map(({ name }) => name).join(', ');\n}","import { useEffect, useState } from 'react';\nimport { useParams, Outlet } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { Container } from 'components/Container/Container';\nimport Loader from 'components/Loader/Loader';\nimport BackButton from 'components/BackButton/BackButton';\nimport MovieCard from 'components/MovieCard/MovieCard';\n\nimport { fetchMoviesById } from '../../services/fetchMovies';\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    try {\n      fetchMoviesById(movieId).then(data => {\n        const {\n          id,\n          poster_path,\n          title,\n          release_date,\n          vote_average,\n          overview,\n          genres,\n        } = data.data;\n        const object = {\n          id,\n          poster_path,\n          title,\n          release_date,\n          vote_average,\n          overview,\n          genres,\n        };\n        setMovie(object);\n      });\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      {error && toast.error(`Whoops, something went wrong: ${error.message}`)}\n      <>\n        {isLoading && <Loader color={'#3f51b5'} size={32} />}\n        <BackButton />\n        <Container>{movie && <MovieCard movie={movie} />}</Container>\n        <Outlet />\n      </>\n    </>\n  );\n}","import axios from 'axios';\n\nexport const http = {\n  get(url) {\n    return axios.get(url);\n  },\n  post(url, body) {\n    return axios.post(url, body);\n  },\n};","const settings = {\n  BASE_URL: 'https://api.themoviedb.org/3',\n  API_KEY: '75111452de58d883c95edb4294730b47',\n  DEFAULT_LANGUAGE: 'en-US',\n};\n\nexport default settings;","import { http } from './api';\nimport apiSettings from './settings';\n\nconst { BASE_URL, API_KEY } = apiSettings;\n\nexport const fetchMovies = (page = 1) => {\n  return http.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`\n  );\n};\n\nexport const fetchMoviesByRequest = (searchRequest, page = 1) => {\n  return http.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&page=${page}&query=${searchRequest}`\n  );\n};\n\nexport const fetchMoviesById = movieId => {\n  return http.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n};\n\nexport const fetchCast = movieId => {\n  return http.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchReviews = movieId => {\n  return http.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n};"],"names":["Container","children","BackButton","state","useLocation","from","to","className","styles","type","MovieCard","data","movie","id","poster_path","title","release_date","vote_average","overview","genres","voteScore","toFixed","location","src","alt","width","getRelizeYear","Math","round","getGenresNames","date","Date","getFullYear","map","name","join","MovieDetailsPage","movieId","useParams","useState","setMovie","isLoading","setIsLoading","error","setError","useEffect","fetchMoviesById","then","toast","message","Loader","color","size","http","url","axios","BASE_URL","API_KEY","DEFAULT_LANGUAGE","apiSettings","fetchMovies","page","fetchMoviesByRequest","searchRequest","fetchCast","fetchReviews"],"sourceRoot":""}